plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.15'
  	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.aidt'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.8")
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'

	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'com.github.ben-manes.caffeine:caffeine'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// netty-resolver-dns-native-macos error - OS 확인 후 종속성 추가
	Boolean isMacOS = System.getProperty("os.name").startsWith("Mac OS X")
	String architecture = System.getProperty("os.arch").toLowerCase()
	if(isMacOS && architecture == "aarch64") {
		developmentOnly('io.netty:netty-resolver-dns-native-macos:4.1.79.Final:osx-aarch_64')
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}